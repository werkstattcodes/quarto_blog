{"title":"Google's Mobility reports: changes to mobility patterns during Covid-19 lock-down in Austria","markdown":{"yaml":{"title":"Google's Mobility reports: changes to mobility patterns during Covid-19 lock-down in Austria","description":"Analysis of Google's mobility reports following introduction of Covid lockdown in March 2020.","date":"04-28-2020","categories":["COVID","Austria"],"image":"preview.png"},"headingText":"knit_hooks$set(wrap = function(before, options, envir){","containsRefs":false,"markdown":"\n\n\n```{r message=FALSE, include=FALSE}\n\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(here)\nlibrary(hrbrthemes)\nlibrary(extrafont)\nloadfonts(device = \"win\", quiet = T)\nextrafont::fonts()\nlibrary(scales)\nlibrary(grid)\nlibrary(knitr)\nlibrary(geofacet)\nlibrary(paletteer)\nlibrary(ggtext)\n\n\n```\n\n```{r setup, echo = F}\n#   if (before){\n#     paste0('<', options$wrap, '>')\n#   } else {\n#     paste0('</', options$wrap, '>')\n#   }\n# })\nknitr::opts_chunk$set(warning = FALSE, message = FALSE, dpi = 180, fig.height = 5, fig.width = 7, fig.align = \"center\")\noptions(width=180, dplyr.width = 150)\n\nplot_bg_color <- \"white\"\n\n\n```\n\n# CONTEXT\n\nHere’s a quick post related to Covid-19, but don’t be afraid, it won’t be another infection et al visualization (see [here](https://werk.statt.codes/post/covid-19-corona-virus-quick-look-at-some-data/){target=\"_blank\"}, but also [here](https://www.williamrchase.com/post/why-i-m-not-making-covid19-visualizations-and-why-you-probably-shouldn-t-either/){target=\"_blank\"}). Google and Apple recently released mobility reports which provide some insights on how the lockdown to curtail the epidemic’s spread affected individuals' mobility patterns. While [Apple’s reports](https://www.apple.com/covid19/mobility){target=\"_blank\"} draw on to routing requests to its Apple Map service, Google’s mobility reports highlight how people’s (= mobile device owner who activated their geo-location) presence on specific type of places changed relatively to a baseline period preceding the outbreak of the crisis and the introduction of the lockdown. You can find more details about the dataset [here]( https://www.google.com/covid19/mobility/){target=”_blank” }.\n\nThe dataset has been quickly picked up by numerous media outlets and data analysts, I nevertheless thought it might be interesting to have a specific look at the data for Austria. Again, this is predominately an exercise in number crunching and not meant to suggest any specific insights of an epidemiological nature etc. I leave this to the actual experts.\n\nOn a more technical level, with this post I also want to highlight the wonderful `geofacet` package by Ryan Hafen  ([link]( https://hafen.github.io/geofacet/){target=”_blank”}). The package, which I used already in a [previous post](https://werk.statt.codes/post/vorzugsstimmen/#candidates-preference-votes-and-electoral-number){target=\"_blank\"}, is an extension to ggplot2, and allows you to arrange a plot’s facets to reflect the position of geographical units on a map. While the facets’ location is a simplification and will hardly reflect the precise and actual size of e.g. a federal state, the approach provides a lucid way of presenting data for different geographical areas. \n\nAs always, the entire code for this analysis is available on my github account [here](https://github.com/werkstattcodes){target=\"_blank\"}. If you see any glaring error etc, or if something is unclear, feel free to let me know, best via a direct message at [twitter](https://twitter.com/zoowalk){target=\"_blank\"}.\n\n# IMPORT DATA\nBut first, let’s import the data. Initially, Google had published only summary graphs (in pdfs) and not the underlying data (what prompted to some very elegant data extraction [exercise](https://joachim-gassen.github.io/2020/04/scrape-google-covid19-cmr-data/){target=\"_blank\"}). But gladly, by now, a csv-file with all data is available on the website.\n\nA few things to highlight: When importing data, the `readr` package generally tries to 'guess' the data type (character, double etc.) by inferring it from the first 1000 lines of the imported data. In some instances, this might not be sufficient or misleading. The **col_types argument** allows to manually specify each column, with **first characters as convenient abbreviations** (c = character, D = date, d = double etc). For details see [here](https://readr.tidyverse.org/articles/readr.html#column-specification){target=\"_blank\"}.\nDplyr 1.0 will provide an option to define the location of a newly created column with the .after/.before argument. \n\n```{r}\n# import csv --------------------------------------------------------------\n# file_link <- \"https://www.gstatic.com/covid19/mobility/Global_Mobility_Report.csv\"\n# \n# df_global <- readr::read_csv(file=file_link, col_types = \"ccccDdddddd\")\n\ndf_AT_mobility <- readr::read_csv2(file=here::here(\"posts\", \"2020-04-28-google-s-mobility-reportsmd\", \"AT_mobility_report.csv\"))\n\n\ndf_AT <- df_AT_mobility %>% \n  filter(country_region_code==\"AT\") %>% \n  mutate(date=as.Date(date)) %>% \n  filter(date<as.Date(\"2020-05-01\")) %>% \n  mutate(sub_region_1=case_when(is.na(sub_region_1) ~ \"State level\",\n                   TRUE ~ as.character(sub_region_1)))\n\ndf_AT_long <- df_AT %>% \n  pivot_longer(cols=contains(\"baseline\"),\n                      names_to=\"type\",\n                      values_to=\"value\") %>% \n  mutate(week.day=lubridate::wday(date, label=T), .after=date) %>% \n  mutate(sub_region_1=forcats::as_factor(sub_region_1))\n\ndata_as_of <- max(df_AT_long$date, na.rm = T)\n\n#ad description of place types from Google's documentation\n\ndf_AT_long <- df_AT_long %>% \n  mutate(place.description=case_when(str_detect(type, \"retail\") ~ \"‘places like restaurants, cafes, shopping centers, theme parks, museums, libraries, and movie theaters.’\",\n                                     str_detect(type, \"grocery\") ~ \"’places like grocery markets, food warehouses, farmers markets, specialty food shops, drug stores, and pharmacies.’\",\n                                     str_detect(type, \"park\") ~ \"‘places like local parks, national parks, public beaches, marinas, dog parks, plazas, and public gardens.’\",\n                                     str_detect(type, \"transit\") ~ \"‘places like public transport hubs such as subway, bus, and train stations.’\",\n                                     str_detect(type, \"work\") ~ \"‘places of work’\",\n                                     str_detect(type, \"residential\") ~ \"‘places of residence’\",\n                                     TRUE ~ as.character(\"missing\"))) %>% \n  mutate(date=as.Date(date))\n\n\n\n```\n\nThe mobility reports contain data on the following types of places:\n\n```{r}\n#| code-overflow: wrap\n#| echo: false\ndf_AT_long %>%\ndistinct(type)\n```\n\nTo distinguish mobility patterns prior and during the lockdown we need to define the relevant dates.\n\n```{r}\n# set dates ---------------------------------------------------------------\ndate.start.lockdown <- as.Date(\"2020-03-16\")\ndate.opening.shops <- as.Date(\"2020-04-14\")\n\ndf_dates <- tibble(date.start.lockdown=date.start.lockdown,\n                   date.opening.shops=date.opening.shops) %>% \n  pivot_longer(cols=everything(),\n               names_to = \"event\",\n               values_to=\"date\")\n```\n\n# GEOFACET GRID\n\nFor `geofacet` to be able to position ggplot's facets in (approximate) accordance with units' actual geographical location, it requires a grid which specifies each facet's relative location. The package comes already with a number of predefined grids, and users can upload newly made grids to the package's github. For the present case, I created a new one defining the location of Austria's nine federal states. As suggested by the package's maintainer, the code are ISO-3166-2 codes. The new grid is now uploaded to geofacet's github and can be called by other users by the name AUT_states_grid.\n\n\n```{r}\nAUT_states_grid <- data.frame(\n  code = c(\"4\", \"3\", \"9\", \"8\", \"7\", \"5\", \"6\", \"1\", \"2\"),\n  name_en=c(\"Upper Austria\", \"Lower Austria\", \"Vienna\", \"Vorarlberg\", \"Tyrol\", \"Salzburg\", \"Styria\", \"Burgenland\", \"Carinthia\"),\n  row = c(1, 1, 1, 2, 2, 2, 2, 2, 3),\n  col = c(3, 4, 5, 1, 2, 3, 4, 5, 4))\n\nAUT_states_grid\n```\n\n\n# MAP OF MOBILITY PATTERS IN PARKS\n\nAs mentioned above, the mobility reports contain data on specific types of places. Let's plot the dynamics for one of them: Parks. \n\n```{r}\ntxt_subtitle <- glue::glue(\"Changes for each day are compared to a baseline value for that day of the week: The baseline is the median value, for the corresponding day of the week, during the 5-week period Jan 3–Feb 6, 2020. For details see https://www.google.com/covid19/mobility/. Data as of {data_as_of}.\")\n\ndate_shutdown <- as.Date(\"2020-03-16\")\n\ndf_AT_long_type <- df_AT_long %>% \n  filter(str_detect(type, \"parks\")) %>% \n  filter(!str_detect(sub_region_1, \"State\")) \n  \npl_map <- df_AT_long_type %>% \n  ggplot()+\n  labs(title=paste(\"Changes in Mobility during Covid-19 crisis:\",                  str_to_upper(str_remove_all(unique(df_AT_long_type$type), regex(\"_percent.*$\")))),\n       subtitle=str_wrap(txt_subtitle, 130),\n       caption=c(\"data: Google Mobility Report\", \"graph: Roland Schmidt | @zoowalk| https://werk.statt.codes/\"))+\n  geom_hline(yintercept=0,\n             color=\"grey20\")+\n  geom_line(data=df_AT_long %>% \n              filter(str_detect(type, \"parks\")) %>% \n              filter(!str_detect(sub_region_1, \"State\")) %>% \n              rename(all_regions=sub_region_1),\n            aes(x=date,\n                y=value,\n                group=all_regions),\n            color=\"grey70\",\n            show.legend=F,\n            stat=\"identity\") +\n  geom_line(aes(x=date,\n                y=value,\n                color=sub_region_1),\n            show.legend=F,\n            size=1)+\n  geom_vline(data=df_dates,\n             aes(xintercept=date,\n                 linetype=event),\n             color=\"red\")+\n  scale_linetype_manual(values=c(date.opening.shops=\"dotted\",\n                                 date.start.lockdown=\"solid\"),\n                        labels=c(date.opening.shops=\"shops partly open\",\n                                 date.start.lockdown=\"start lockdown\"))+\n  theme_ipsum_rc()+\n  scale_x_date(labels = scales::label_date_short(),\n               expand=expansion(mult=c(0, 0.15)),\n               breaks = c(seq.Date(min(df_AT_long$date), \n                                   max(df_AT_long$date), \n                                   by=\"2 week\"))) +\n  scale_y_continuous(labels=scales::label_percent(accuracy = 1,\n                                                  scale=1),\n                     limits=c(-100, 100))+\n  scale_color_paletteer_d(\"ggsci::default_uchicago\")+\n  theme(\n    axis.title.x = element_blank(),\n    axis.text.x = element_text(size = 9),\n    axis.text.y = element_text(size = 9),\n    axis.title.y=element_blank(),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank(),\n    strip.text.y = element_text(angle = 0, vjust = 1),\n    legend.position = \"bottom\",\n    legend.justification = \"right\",\n    legend.key.size=unit(0.5, \"cm\"),\n    legend.key.height = unit(0.5, \"cm\"),\n    legend.title = element_blank(),\n    legend.text = element_text(size=10),\n    # plot.title = element_text(size = 12),\n    panel.spacing.x = unit(0.2, \"cm\"),\n    panel.spacing.y = unit(0.1, \"cm\"),\n    plot.margin=margin(l=0, r=0, unit=\"cm\"),\n    plot.title.position = \"plot\",\n    plot.subtitle = element_text(size=9, color=\"grey30\"),\n    plot.caption.position = \"plot\",\n    plot.caption = element_text(hjust = c(0, 1), color = \"grey30\"),\n    plot.background = element_rect(fill=plot_bg_color, color=plot_bg_color)\n  )+\n  facet_geo(~sub_region_1, grid = AUT_states_grid)+\n  guides(linetype = guide_legend(override.aes = list(colour = \"red\",\n                                                     direction=\"vertical\"),\n                                 reverse = T),\n         colour = \"none\")\n```\n\n```{r}\n#| column: body-outset-left\n#| fig-heigt: 6\n#| echo: false\n\npl_map\n\n```\n\nBefore diving into the interpretation let's recall what the displayed values actually mean. In Google's [own words](https://www.google.com/covid19/mobility/data_documentation.html?hl=en){target=\"_blank\"} <br><br> *'the data show how visits and lengths of stay at different places change compared to a baseline. Changes for each day are compared to a baseline value for that day of the week. The baseline is the median value, for the corresponding day of the week, during the 5-week period Jan 3–Feb 6, 2020. The changes are based on data from users who have opted-in to Location History for their Google Account, so the data represents a sample of users.'*\n\nSo with this in mind, let's look at the graph which depicts the presence in parks. The colored line is the values for the state, grey lines are the values for all other states for the sake of contrast.\n\nI think it's pretty clear that either slightly before or from the introduction of the lockdown onward, individuals' presence in parks decreased considerably. At a closer look, a few variations appear. \n\nWhen it comes to the *period before the lockdown*, the values for Vorarlberg, Tyrol, Salzburg and Carinthia started decreasing from a relative high level already prior to the lockdown. I don't have any definite answer for that, but I could imagine that mid-February the skiing season had a final peak with schools (e.g. in Germany) having a term break and tourists flocking in strong numbers to the slopes (compared to the baseline). Subsequently, with the skiing season coming to a gradual end, the high numbers started to decrease. But again, whether this dynamic had an impact on parks is purely speculative. In contrast, in most of the other states, the presence level in parks was rather stable prior to the lockdown. \n\nBy and large, the lockdown on 16 March lead to a clearly visible reduction in parks. Oddly, there seems to have been some delay in lockdown's impact in Lower Austria and Burgenland.\n\nThere is also some variation when it comes to the *dynamics during the lockdown*. While the presence in parks stayed in most states on a comparably low level, Lower Austria, Burgenland and Upper Austria gradually 'rebounded' and the individuals' presence in parks increased again to pre-lockdown levels. Also in Vienna, the presence in parks grew, albeit slower and so far not beyond the baseline level. I don't have any explanation for that, but could imagine that it has something to do with individuals' options to leave their flat to get some fresh air. While in more urban states, parks are the probably the destination of choice, more rural states offer a variety of other 'escapes'. But that's only me speculating here.\n\n\n# BOXPLOT ON ALL TYPES OF PLACES\n\nFinally, to better distill the changes between before and during the lockdown as well as between the federal states, the plots below present (half) a boxplot summarizing the relative changes of mobility patterns for **all types of places** provided in Google's mobility reports. To supplement the boxplot, I also plot the actual values for each day (= each dot) which represent the relative change of each day to the corresponding weekday in the baseline period. The package `gghalves` allows for combining 'half' plots of two types. Iterating the ggplot command over all types of places covered by Google's mobility reports gives us one map per place type.\n\nTo see whether weekends are in any way different, I marked them in red.\n\n```{r}\n# boxplot before after ----------------------------------------------------\n\ndf_AT_long <- df_AT_long %>% \n  mutate(lockdown.indicator=case_when(date>=date.start.lockdown ~ \"lockdown\",\n                                      date<date.start.lockdown ~ \"before lockdown\")) %>% \n  mutate(weekend.indicator=case_when(week.day %in% c(\"Sat\", \"Sun\") ~ \"weekend\",\n                                     TRUE ~ as.character(\"not weekend\"))) #%>% \n  \nfn_map <- function(df, my_type) {\n  \n  df %>% \n  filter(str_detect(type, my_type)) %>% \n  filter(!str_detect(sub_region_1, \"State\")) %>% {\n    ggplot(., aes(x=lockdown.indicator,\n                  y=value))+\n      labs(title=paste(\"Changes in Mobility during Covid-19 crisis:\", \n                       str_to_upper(str_remove_all(unique(.$type), regex(\"_percent.*$\")) %>% str_replace_all(., \"_\", \" \"))),\n           # subtitle=str_wrap(txt_subtitle, 100),\n           # subtitle=str_wrap(paste(txt_subtitle, \"\\n\", unique(.$tpye), \"are defined as\", unique(.$place.description)), 100),\n           \n                      subtitle=str_c(str_wrap(txt_subtitle, 130), \n                        str_wrap(paste(str_to_sentence(str_remove_all(unique(.$type), regex(\"_percent.*$\"))) %>% str_replace_all(., \"_\", \" \"),  \n                                   \"are defined as\", \n                                   unique(.$place.description)), 130)),\n\n           \n           caption=c(\"data: Google Mobility Report\", \n                          \"graph: Roland Schmidt | @zoowalk | http://werk.statt.codes\"))+\n      gghalves::geom_half_boxplot(side=\"l\",\n                                  aes(color=NULL),\n                                  outlier.shape = NA,\n                                  # nudge=0.2,\n                                  show.legend = F)+\n      gghalves::geom_half_point_panel(aes(color=weekend.indicator),\n                                side=\"r\",\n                                range_scale = 0.75,\n                                size=0.4,\n                                show.legend = T,\n                                # nudge=0.2,\n                                transformation=position_jitter(width=0.8))+\n      scale_x_discrete(labels=c(\"before lockdown\"=\"before\", \"lockdown\"=\"during\"))+\n      scale_color_paletteer_d(\"ggsci::default_jama\")+\n      scale_y_continuous(limits=c(-100, 100),\n                         labels = scales::label_percent(scale = 1),\n                         minor_breaks = NULL)+\n      facet_geo(~sub_region_1, grid = AUT_states_grid)+\n      theme_ipsum_rc()+\n  scale_color_paletteer_d(\"ggsci::default_uchicago\")+\n  theme(\n    axis.title.x = element_blank(),\n    axis.text.x = element_text(size = 9),\n    axis.text.y = element_text(size=9),\n    axis.title.y=element_blank(),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank(),\n    strip.text.y = element_text(angle = 0, vjust = 1),\n    legend.position = \"top\",\n    legend.justification = \"left\",\n    legend.key.size=unit(0.5, \"cm\"),\n    legend.key.height = unit(0.5, \"cm\"),\n    legend.title = element_blank(),\n    legend.text = element_text(size=10),\n    panel.spacing.x = unit(0.2, \"cm\"),\n    panel.spacing.y = unit(0.1, \"cm\"),\n    plot.margin=margin(l=0, r=0, unit=\"cm\"),\n    plot.title.position = \"plot\",\n    plot.caption.position = \"plot\",\n    plot.background = element_rect(fill=plot_bg_color, color=plot_bg_color),\n    plot.subtitle=element_text(size=9, color=\"grey30\"),\n    plot.caption = element_text(hjust = c(0, 1), color = \"grey30\"))+\n  facet_geo(~sub_region_1, grid = AUT_states_grid,\n            labeller=as_labeller(function(x) str_remove_all(x, regex(\"_percent.*$\")) %>%\n                                   str_replace_all(., \"_\", \" \")))+\n      guides(color=guide_legend(override.aes=list(size=3)))}\n}\n\npl_list <- unique(df_AT_long$type) %>% \n  map(., ~fn_map(df=df_AT_long, my_type=.x))\n\n```\n\n\n## Retail and Recreation\n\n\n```{r}\n#| fig-height: 6\n#| column: body-outset-left\n#| echo: false\n\npl_list[[1]]\n```\n\n## Grocery and Pharmacy\n\n```{r}\n#| fig-height: 6\n#| column: body-outset-left\n#| echo: false\n\npl_list[[2]]\n```\n\n## Parks\n\n```{r}\n#| echo: false\n#| fig-height: 6\n#| column: body-outset-left\n\npl_list[[3]]\n```\n\n## Transit stations\n\n```{r}\n#| fig-height: 6\n#| column: body-outset-left\n#| echo: false\n\npl_list[[4]]\n```\n\n## Workplaces\n\n```{r}\n#| fig-height: 6\n#| column: body-outset-left\n#| echo: false\npl_list[[5]]\n```\n\n## Residential\n\n```{r}\n#| fig-height: 6\n#| column: body-outset-left\n#| echo: false\npl_list[[6]]\n```\n\nAgain, I'll refrain from what might become far-fetched interpretations, but what is noteworthy is the overwhelmingly narrow spread of values during the lockdown with the exception of parks. I was a bit puzzled by the relatively weak increase of stays in residential areas compared to the baseline period. Not sure what to make of this.\n","srcMarkdownNoYaml":"\n\n\n```{r message=FALSE, include=FALSE}\n\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(here)\nlibrary(hrbrthemes)\nlibrary(extrafont)\nloadfonts(device = \"win\", quiet = T)\nextrafont::fonts()\nlibrary(scales)\nlibrary(grid)\nlibrary(knitr)\nlibrary(geofacet)\nlibrary(paletteer)\nlibrary(ggtext)\n\n\n```\n\n```{r setup, echo = F}\n# knit_hooks$set(wrap = function(before, options, envir){\n#   if (before){\n#     paste0('<', options$wrap, '>')\n#   } else {\n#     paste0('</', options$wrap, '>')\n#   }\n# })\nknitr::opts_chunk$set(warning = FALSE, message = FALSE, dpi = 180, fig.height = 5, fig.width = 7, fig.align = \"center\")\noptions(width=180, dplyr.width = 150)\n\nplot_bg_color <- \"white\"\n\n\n```\n\n# CONTEXT\n\nHere’s a quick post related to Covid-19, but don’t be afraid, it won’t be another infection et al visualization (see [here](https://werk.statt.codes/post/covid-19-corona-virus-quick-look-at-some-data/){target=\"_blank\"}, but also [here](https://www.williamrchase.com/post/why-i-m-not-making-covid19-visualizations-and-why-you-probably-shouldn-t-either/){target=\"_blank\"}). Google and Apple recently released mobility reports which provide some insights on how the lockdown to curtail the epidemic’s spread affected individuals' mobility patterns. While [Apple’s reports](https://www.apple.com/covid19/mobility){target=\"_blank\"} draw on to routing requests to its Apple Map service, Google’s mobility reports highlight how people’s (= mobile device owner who activated their geo-location) presence on specific type of places changed relatively to a baseline period preceding the outbreak of the crisis and the introduction of the lockdown. You can find more details about the dataset [here]( https://www.google.com/covid19/mobility/){target=”_blank” }.\n\nThe dataset has been quickly picked up by numerous media outlets and data analysts, I nevertheless thought it might be interesting to have a specific look at the data for Austria. Again, this is predominately an exercise in number crunching and not meant to suggest any specific insights of an epidemiological nature etc. I leave this to the actual experts.\n\nOn a more technical level, with this post I also want to highlight the wonderful `geofacet` package by Ryan Hafen  ([link]( https://hafen.github.io/geofacet/){target=”_blank”}). The package, which I used already in a [previous post](https://werk.statt.codes/post/vorzugsstimmen/#candidates-preference-votes-and-electoral-number){target=\"_blank\"}, is an extension to ggplot2, and allows you to arrange a plot’s facets to reflect the position of geographical units on a map. While the facets’ location is a simplification and will hardly reflect the precise and actual size of e.g. a federal state, the approach provides a lucid way of presenting data for different geographical areas. \n\nAs always, the entire code for this analysis is available on my github account [here](https://github.com/werkstattcodes){target=\"_blank\"}. If you see any glaring error etc, or if something is unclear, feel free to let me know, best via a direct message at [twitter](https://twitter.com/zoowalk){target=\"_blank\"}.\n\n# IMPORT DATA\nBut first, let’s import the data. Initially, Google had published only summary graphs (in pdfs) and not the underlying data (what prompted to some very elegant data extraction [exercise](https://joachim-gassen.github.io/2020/04/scrape-google-covid19-cmr-data/){target=\"_blank\"}). But gladly, by now, a csv-file with all data is available on the website.\n\nA few things to highlight: When importing data, the `readr` package generally tries to 'guess' the data type (character, double etc.) by inferring it from the first 1000 lines of the imported data. In some instances, this might not be sufficient or misleading. The **col_types argument** allows to manually specify each column, with **first characters as convenient abbreviations** (c = character, D = date, d = double etc). For details see [here](https://readr.tidyverse.org/articles/readr.html#column-specification){target=\"_blank\"}.\nDplyr 1.0 will provide an option to define the location of a newly created column with the .after/.before argument. \n\n```{r}\n# import csv --------------------------------------------------------------\n# file_link <- \"https://www.gstatic.com/covid19/mobility/Global_Mobility_Report.csv\"\n# \n# df_global <- readr::read_csv(file=file_link, col_types = \"ccccDdddddd\")\n\ndf_AT_mobility <- readr::read_csv2(file=here::here(\"posts\", \"2020-04-28-google-s-mobility-reportsmd\", \"AT_mobility_report.csv\"))\n\n\ndf_AT <- df_AT_mobility %>% \n  filter(country_region_code==\"AT\") %>% \n  mutate(date=as.Date(date)) %>% \n  filter(date<as.Date(\"2020-05-01\")) %>% \n  mutate(sub_region_1=case_when(is.na(sub_region_1) ~ \"State level\",\n                   TRUE ~ as.character(sub_region_1)))\n\ndf_AT_long <- df_AT %>% \n  pivot_longer(cols=contains(\"baseline\"),\n                      names_to=\"type\",\n                      values_to=\"value\") %>% \n  mutate(week.day=lubridate::wday(date, label=T), .after=date) %>% \n  mutate(sub_region_1=forcats::as_factor(sub_region_1))\n\ndata_as_of <- max(df_AT_long$date, na.rm = T)\n\n#ad description of place types from Google's documentation\n\ndf_AT_long <- df_AT_long %>% \n  mutate(place.description=case_when(str_detect(type, \"retail\") ~ \"‘places like restaurants, cafes, shopping centers, theme parks, museums, libraries, and movie theaters.’\",\n                                     str_detect(type, \"grocery\") ~ \"’places like grocery markets, food warehouses, farmers markets, specialty food shops, drug stores, and pharmacies.’\",\n                                     str_detect(type, \"park\") ~ \"‘places like local parks, national parks, public beaches, marinas, dog parks, plazas, and public gardens.’\",\n                                     str_detect(type, \"transit\") ~ \"‘places like public transport hubs such as subway, bus, and train stations.’\",\n                                     str_detect(type, \"work\") ~ \"‘places of work’\",\n                                     str_detect(type, \"residential\") ~ \"‘places of residence’\",\n                                     TRUE ~ as.character(\"missing\"))) %>% \n  mutate(date=as.Date(date))\n\n\n\n```\n\nThe mobility reports contain data on the following types of places:\n\n```{r}\n#| code-overflow: wrap\n#| echo: false\ndf_AT_long %>%\ndistinct(type)\n```\n\nTo distinguish mobility patterns prior and during the lockdown we need to define the relevant dates.\n\n```{r}\n# set dates ---------------------------------------------------------------\ndate.start.lockdown <- as.Date(\"2020-03-16\")\ndate.opening.shops <- as.Date(\"2020-04-14\")\n\ndf_dates <- tibble(date.start.lockdown=date.start.lockdown,\n                   date.opening.shops=date.opening.shops) %>% \n  pivot_longer(cols=everything(),\n               names_to = \"event\",\n               values_to=\"date\")\n```\n\n# GEOFACET GRID\n\nFor `geofacet` to be able to position ggplot's facets in (approximate) accordance with units' actual geographical location, it requires a grid which specifies each facet's relative location. The package comes already with a number of predefined grids, and users can upload newly made grids to the package's github. For the present case, I created a new one defining the location of Austria's nine federal states. As suggested by the package's maintainer, the code are ISO-3166-2 codes. The new grid is now uploaded to geofacet's github and can be called by other users by the name AUT_states_grid.\n\n\n```{r}\nAUT_states_grid <- data.frame(\n  code = c(\"4\", \"3\", \"9\", \"8\", \"7\", \"5\", \"6\", \"1\", \"2\"),\n  name_en=c(\"Upper Austria\", \"Lower Austria\", \"Vienna\", \"Vorarlberg\", \"Tyrol\", \"Salzburg\", \"Styria\", \"Burgenland\", \"Carinthia\"),\n  row = c(1, 1, 1, 2, 2, 2, 2, 2, 3),\n  col = c(3, 4, 5, 1, 2, 3, 4, 5, 4))\n\nAUT_states_grid\n```\n\n\n# MAP OF MOBILITY PATTERS IN PARKS\n\nAs mentioned above, the mobility reports contain data on specific types of places. Let's plot the dynamics for one of them: Parks. \n\n```{r}\ntxt_subtitle <- glue::glue(\"Changes for each day are compared to a baseline value for that day of the week: The baseline is the median value, for the corresponding day of the week, during the 5-week period Jan 3–Feb 6, 2020. For details see https://www.google.com/covid19/mobility/. Data as of {data_as_of}.\")\n\ndate_shutdown <- as.Date(\"2020-03-16\")\n\ndf_AT_long_type <- df_AT_long %>% \n  filter(str_detect(type, \"parks\")) %>% \n  filter(!str_detect(sub_region_1, \"State\")) \n  \npl_map <- df_AT_long_type %>% \n  ggplot()+\n  labs(title=paste(\"Changes in Mobility during Covid-19 crisis:\",                  str_to_upper(str_remove_all(unique(df_AT_long_type$type), regex(\"_percent.*$\")))),\n       subtitle=str_wrap(txt_subtitle, 130),\n       caption=c(\"data: Google Mobility Report\", \"graph: Roland Schmidt | @zoowalk| https://werk.statt.codes/\"))+\n  geom_hline(yintercept=0,\n             color=\"grey20\")+\n  geom_line(data=df_AT_long %>% \n              filter(str_detect(type, \"parks\")) %>% \n              filter(!str_detect(sub_region_1, \"State\")) %>% \n              rename(all_regions=sub_region_1),\n            aes(x=date,\n                y=value,\n                group=all_regions),\n            color=\"grey70\",\n            show.legend=F,\n            stat=\"identity\") +\n  geom_line(aes(x=date,\n                y=value,\n                color=sub_region_1),\n            show.legend=F,\n            size=1)+\n  geom_vline(data=df_dates,\n             aes(xintercept=date,\n                 linetype=event),\n             color=\"red\")+\n  scale_linetype_manual(values=c(date.opening.shops=\"dotted\",\n                                 date.start.lockdown=\"solid\"),\n                        labels=c(date.opening.shops=\"shops partly open\",\n                                 date.start.lockdown=\"start lockdown\"))+\n  theme_ipsum_rc()+\n  scale_x_date(labels = scales::label_date_short(),\n               expand=expansion(mult=c(0, 0.15)),\n               breaks = c(seq.Date(min(df_AT_long$date), \n                                   max(df_AT_long$date), \n                                   by=\"2 week\"))) +\n  scale_y_continuous(labels=scales::label_percent(accuracy = 1,\n                                                  scale=1),\n                     limits=c(-100, 100))+\n  scale_color_paletteer_d(\"ggsci::default_uchicago\")+\n  theme(\n    axis.title.x = element_blank(),\n    axis.text.x = element_text(size = 9),\n    axis.text.y = element_text(size = 9),\n    axis.title.y=element_blank(),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank(),\n    strip.text.y = element_text(angle = 0, vjust = 1),\n    legend.position = \"bottom\",\n    legend.justification = \"right\",\n    legend.key.size=unit(0.5, \"cm\"),\n    legend.key.height = unit(0.5, \"cm\"),\n    legend.title = element_blank(),\n    legend.text = element_text(size=10),\n    # plot.title = element_text(size = 12),\n    panel.spacing.x = unit(0.2, \"cm\"),\n    panel.spacing.y = unit(0.1, \"cm\"),\n    plot.margin=margin(l=0, r=0, unit=\"cm\"),\n    plot.title.position = \"plot\",\n    plot.subtitle = element_text(size=9, color=\"grey30\"),\n    plot.caption.position = \"plot\",\n    plot.caption = element_text(hjust = c(0, 1), color = \"grey30\"),\n    plot.background = element_rect(fill=plot_bg_color, color=plot_bg_color)\n  )+\n  facet_geo(~sub_region_1, grid = AUT_states_grid)+\n  guides(linetype = guide_legend(override.aes = list(colour = \"red\",\n                                                     direction=\"vertical\"),\n                                 reverse = T),\n         colour = \"none\")\n```\n\n```{r}\n#| column: body-outset-left\n#| fig-heigt: 6\n#| echo: false\n\npl_map\n\n```\n\nBefore diving into the interpretation let's recall what the displayed values actually mean. In Google's [own words](https://www.google.com/covid19/mobility/data_documentation.html?hl=en){target=\"_blank\"} <br><br> *'the data show how visits and lengths of stay at different places change compared to a baseline. Changes for each day are compared to a baseline value for that day of the week. The baseline is the median value, for the corresponding day of the week, during the 5-week period Jan 3–Feb 6, 2020. The changes are based on data from users who have opted-in to Location History for their Google Account, so the data represents a sample of users.'*\n\nSo with this in mind, let's look at the graph which depicts the presence in parks. The colored line is the values for the state, grey lines are the values for all other states for the sake of contrast.\n\nI think it's pretty clear that either slightly before or from the introduction of the lockdown onward, individuals' presence in parks decreased considerably. At a closer look, a few variations appear. \n\nWhen it comes to the *period before the lockdown*, the values for Vorarlberg, Tyrol, Salzburg and Carinthia started decreasing from a relative high level already prior to the lockdown. I don't have any definite answer for that, but I could imagine that mid-February the skiing season had a final peak with schools (e.g. in Germany) having a term break and tourists flocking in strong numbers to the slopes (compared to the baseline). Subsequently, with the skiing season coming to a gradual end, the high numbers started to decrease. But again, whether this dynamic had an impact on parks is purely speculative. In contrast, in most of the other states, the presence level in parks was rather stable prior to the lockdown. \n\nBy and large, the lockdown on 16 March lead to a clearly visible reduction in parks. Oddly, there seems to have been some delay in lockdown's impact in Lower Austria and Burgenland.\n\nThere is also some variation when it comes to the *dynamics during the lockdown*. While the presence in parks stayed in most states on a comparably low level, Lower Austria, Burgenland and Upper Austria gradually 'rebounded' and the individuals' presence in parks increased again to pre-lockdown levels. Also in Vienna, the presence in parks grew, albeit slower and so far not beyond the baseline level. I don't have any explanation for that, but could imagine that it has something to do with individuals' options to leave their flat to get some fresh air. While in more urban states, parks are the probably the destination of choice, more rural states offer a variety of other 'escapes'. But that's only me speculating here.\n\n\n# BOXPLOT ON ALL TYPES OF PLACES\n\nFinally, to better distill the changes between before and during the lockdown as well as between the federal states, the plots below present (half) a boxplot summarizing the relative changes of mobility patterns for **all types of places** provided in Google's mobility reports. To supplement the boxplot, I also plot the actual values for each day (= each dot) which represent the relative change of each day to the corresponding weekday in the baseline period. The package `gghalves` allows for combining 'half' plots of two types. Iterating the ggplot command over all types of places covered by Google's mobility reports gives us one map per place type.\n\nTo see whether weekends are in any way different, I marked them in red.\n\n```{r}\n# boxplot before after ----------------------------------------------------\n\ndf_AT_long <- df_AT_long %>% \n  mutate(lockdown.indicator=case_when(date>=date.start.lockdown ~ \"lockdown\",\n                                      date<date.start.lockdown ~ \"before lockdown\")) %>% \n  mutate(weekend.indicator=case_when(week.day %in% c(\"Sat\", \"Sun\") ~ \"weekend\",\n                                     TRUE ~ as.character(\"not weekend\"))) #%>% \n  \nfn_map <- function(df, my_type) {\n  \n  df %>% \n  filter(str_detect(type, my_type)) %>% \n  filter(!str_detect(sub_region_1, \"State\")) %>% {\n    ggplot(., aes(x=lockdown.indicator,\n                  y=value))+\n      labs(title=paste(\"Changes in Mobility during Covid-19 crisis:\", \n                       str_to_upper(str_remove_all(unique(.$type), regex(\"_percent.*$\")) %>% str_replace_all(., \"_\", \" \"))),\n           # subtitle=str_wrap(txt_subtitle, 100),\n           # subtitle=str_wrap(paste(txt_subtitle, \"\\n\", unique(.$tpye), \"are defined as\", unique(.$place.description)), 100),\n           \n                      subtitle=str_c(str_wrap(txt_subtitle, 130), \n                        str_wrap(paste(str_to_sentence(str_remove_all(unique(.$type), regex(\"_percent.*$\"))) %>% str_replace_all(., \"_\", \" \"),  \n                                   \"are defined as\", \n                                   unique(.$place.description)), 130)),\n\n           \n           caption=c(\"data: Google Mobility Report\", \n                          \"graph: Roland Schmidt | @zoowalk | http://werk.statt.codes\"))+\n      gghalves::geom_half_boxplot(side=\"l\",\n                                  aes(color=NULL),\n                                  outlier.shape = NA,\n                                  # nudge=0.2,\n                                  show.legend = F)+\n      gghalves::geom_half_point_panel(aes(color=weekend.indicator),\n                                side=\"r\",\n                                range_scale = 0.75,\n                                size=0.4,\n                                show.legend = T,\n                                # nudge=0.2,\n                                transformation=position_jitter(width=0.8))+\n      scale_x_discrete(labels=c(\"before lockdown\"=\"before\", \"lockdown\"=\"during\"))+\n      scale_color_paletteer_d(\"ggsci::default_jama\")+\n      scale_y_continuous(limits=c(-100, 100),\n                         labels = scales::label_percent(scale = 1),\n                         minor_breaks = NULL)+\n      facet_geo(~sub_region_1, grid = AUT_states_grid)+\n      theme_ipsum_rc()+\n  scale_color_paletteer_d(\"ggsci::default_uchicago\")+\n  theme(\n    axis.title.x = element_blank(),\n    axis.text.x = element_text(size = 9),\n    axis.text.y = element_text(size=9),\n    axis.title.y=element_blank(),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank(),\n    strip.text.y = element_text(angle = 0, vjust = 1),\n    legend.position = \"top\",\n    legend.justification = \"left\",\n    legend.key.size=unit(0.5, \"cm\"),\n    legend.key.height = unit(0.5, \"cm\"),\n    legend.title = element_blank(),\n    legend.text = element_text(size=10),\n    panel.spacing.x = unit(0.2, \"cm\"),\n    panel.spacing.y = unit(0.1, \"cm\"),\n    plot.margin=margin(l=0, r=0, unit=\"cm\"),\n    plot.title.position = \"plot\",\n    plot.caption.position = \"plot\",\n    plot.background = element_rect(fill=plot_bg_color, color=plot_bg_color),\n    plot.subtitle=element_text(size=9, color=\"grey30\"),\n    plot.caption = element_text(hjust = c(0, 1), color = \"grey30\"))+\n  facet_geo(~sub_region_1, grid = AUT_states_grid,\n            labeller=as_labeller(function(x) str_remove_all(x, regex(\"_percent.*$\")) %>%\n                                   str_replace_all(., \"_\", \" \")))+\n      guides(color=guide_legend(override.aes=list(size=3)))}\n}\n\npl_list <- unique(df_AT_long$type) %>% \n  map(., ~fn_map(df=df_AT_long, my_type=.x))\n\n```\n\n\n## Retail and Recreation\n\n\n```{r}\n#| fig-height: 6\n#| column: body-outset-left\n#| echo: false\n\npl_list[[1]]\n```\n\n## Grocery and Pharmacy\n\n```{r}\n#| fig-height: 6\n#| column: body-outset-left\n#| echo: false\n\npl_list[[2]]\n```\n\n## Parks\n\n```{r}\n#| echo: false\n#| fig-height: 6\n#| column: body-outset-left\n\npl_list[[3]]\n```\n\n## Transit stations\n\n```{r}\n#| fig-height: 6\n#| column: body-outset-left\n#| echo: false\n\npl_list[[4]]\n```\n\n## Workplaces\n\n```{r}\n#| fig-height: 6\n#| column: body-outset-left\n#| echo: false\npl_list[[5]]\n```\n\n## Residential\n\n```{r}\n#| fig-height: 6\n#| column: body-outset-left\n#| echo: false\npl_list[[6]]\n```\n\nAgain, I'll refrain from what might become far-fetched interpretations, but what is noteworthy is the overwhelmingly narrow spread of values during the lockdown with the exception of parks. I was a bit puzzled by the relatively weak increase of stays in residential areas compared to the baseline period. Not sure what to make of this.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"left","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","filters":["lightbox"],"css":["../../styles.css"],"highlight-style":"nord","toc":true,"toc-depth":4,"number-sections":true,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.43","editor":"visual","date-format":"D MMM YYYY","lightbox":{"match":"auto","desc-position":"bottom"},"theme":{"light":"litera"},"code-copy":true,"fontsize":"16px","toc-title":"Contents","toc-location":"left","fig-cap-location":"top","smooth-scroll":true,"author":[{"name":"Roland Schmidt"}],"title-block-banner":false,"license":"CC BY-NC","citation":true,"number-depth":3,"title":"Google's Mobility reports: changes to mobility patterns during Covid-19 lock-down in Austria","description":"Analysis of Google's mobility reports following introduction of Covid lockdown in March 2020.","date":"04-28-2020","categories":["COVID","Austria"],"image":"preview.png"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}